#!/bin/sh
set -eu

THIS_FILE=$(readlink -f "$0")
BASEDIR=$(dirname "$THIS_FILE")

# Extract project version from build.gradle
version_format='([0-9\.]+)'
expression="s/^version \= ['\"]$version_format['\"]\$/\1/p"
VERSION=$(sed -En "--expression=$expression" $BASEDIR/wvWare/build.gradle)
RELEASEDVERSION=$VERSION

expression="s/^\s*versionCode ([0-9]+)\$/\1/p"
VERSIONCODE=$(sed -En "--expression=$expression" $BASEDIR/wvWare/build.gradle)
RELEASEDVERSIONCODE=$VERSIONCODE
VERSIONCODE=$((VERSIONCODE + 1))

major=$(echo $VERSION | cut -d'.' -f1)
minor=$(echo $VERSION | cut -d'.' -f2)
patch=$(echo $VERSION | cut -d'.' -f3)

target="patch"
for i in "$@"
do
  if test "$i" = "--major"
  then
    target="major"
  elif test "$i" = "--minor"
  then
    target="minor"
  fi
done

if test "$target" = "major"
then
  major=$((major + 1))
  minor=0
  patch=0
elif test "$target" = "minor"
then
  minor=$((minor + 1))
  patch=0
elif test "$target" = "patch"
then
  patch=$((patch + 1))
fi

VERSION="$major.$minor.$patch"

echo "Released versionName = $RELEASEDVERSION"
echo "Released versionCode = $RELEASEDVERSIONCODE"

echo "New versionName = $VERSION"
echo "New versionCode = $VERSIONCODE"

# Update library's versionName
version_format='([0-9\.]+)'
expression="s/^version \= ['\"]$version_format['\"]\$/version \= '$VERSION'/"
sed -E "--expression=$expression" -i $BASEDIR/wvWare/build.gradle

# Update library's versionCode
expression="s/versionCode ([0-9]+)\$/versionCode $VERSIONCODE/"
sed -E "--expression=$expression" -i $BASEDIR/wvWare/build.gradle
